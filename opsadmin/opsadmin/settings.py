"""
Django settings for opsadmin project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mol6b1r2$4ifeg9-2wq)dc8g@-)a4m!$)832ig7kd(x1818$jc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'log',
    'asset',
    'common',
    'user',
    'webterminal',
    'perm',
    'channels',
    'django_jinja',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

MIDDLEWARE = [
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'user.UserMiddleware.ActiveUserMiddleware',
]

ROOT_URLCONF = 'opsadmin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# TEMPLATES = [
#     {
#         "BACKEND": "django_jinja.backend.Jinja2",
#         "APP_DIRS": True,
#         "OPTIONS": {
#             # Match the template names ending in .html but not the ones in the admin folder.
#             "match_extension": ".html",
#             "match_regex": r"^(?!admin/).*",
#             "app_dirname": "jinja2",
#
#             # Can be set to "jinja2.Undefined" or any other subclass.
#             "undefined": None,
#             "context_processors": [
#                 "django.contrib.auth.context_processors.auth",
#                 "django.template.context_processors.debug",
#                 "django.template.context_processors.i18n",
#                 "django.template.context_processors.media",
#                 "django.template.context_processors.static",
#                 "django.template.context_processors.tz",
#                 "django.contrib.messages.context_processors.messages",
#             ],
#
#             "extensions": [
#                 "jinja2.ext.do",
#                 "jinja2.ext.loopcontrols",
#                 "jinja2.ext.with_",
#                 "jinja2.ext.i18n",
#                 "jinja2.ext.autoescape",
#                 "django_jinja.builtins.extensions.CsrfExtension",
#                 "django_jinja.builtins.extensions.CacheExtension",
#                 "django_jinja.builtins.extensions.TimezoneExtension",
#                 "django_jinja.builtins.extensions.UrlsExtension",
#                 "django_jinja.builtins.extensions.StaticFilesExtension",
#                 "django_jinja.builtins.extensions.DjangoFiltersExtension",
#             ],
#             "bytecode_cache": {
#                 "name": "default",
#                 "backend": "django_jinja.cache.BytecodeCache",
#                 "enabled": False,
#             },
#             "autoescape": True,
#             "auto_reload": DEBUG,
#             "translation_engine": "django.utils.translation",
#         }
#     },
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': ['templates'],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]


WSGI_APPLICATION = 'opsadmin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'opsadmin',
        'USER':'root',
        'PASSWORD':'bwei',
        'HOST':'192.168.5.138',
        'PORT':3306,
    }
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.5.138:6379/5",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en'
LANGUAGES = (
    ('en', ('English')),
    ('zh-cn', ('中文简体')),
    ('zh-tw', ('中文繁體')),
)
LOCALE_PATHS = (
    os.path.join(BASE_DIR, '/static/locale'),
)


TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

AUTH_USER_MODEL = 'user.User'

USER_ONLINE_TIMEOUT = 300

USER_LASTSEEN_TIMEOUT = 60 * 60 * 24 * 7
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    "%s/%s" %(BASE_DIR, "static"),
)

REST_FRAMEWORK = {

    'DEFAULT_PERMISSION_CLASSES' : ('rest_framework.permissions.AllowAny',),

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
}

EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = '2710417389@qq.com' # 你的 QQ 账号
EMAIL_HOST_PASSWORD = 'nrhphajeamlcdgcc'
EMAIL_USE_TLS = True # 这里必须是 True，否则发送不成功
EMAIL_FROM = '2710417389@qq.com' # 你的 QQ 账号

ANSIBLE_USER = 'Ansible'
ANSIBLE_PRIVATE_KEY = '~/.ssh/id_rsa'

REDIS_OPTIONS = {
    'HOST': '192.168.5.138',
    'PORT': 6379,
    'DB': 0
}
USE_REDIS = True
# Channel settings
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",
        "CONFIG": {
            "hosts": ['redis://{}:{}'.format(REDIS_OPTIONS['HOST'],
                                             REDIS_OPTIONS['PORT'])]
        },
        "ROUTING": "opsadmin.routing.channel_routing"
    }
}

ADMIN_EMAIL = '735964033@qq.com'
WEBSITE_LOCATION = 'localhost'


EMAIL_TIME_INTERVAL = 10
EMAIL_VAILD_COUNT = 1

SYSTEM_USER_ADMIN_GROUP = 'sudo'

MEDIA_ROOT = "%s/static/media"%(BASE_DIR)

media = "media"

BROKER_URL = 'redis://192.168.5.138:6379/3'
#celery结果返回，可用于跟踪结果
CELERY_RESULT_BACKEND = 'redis://192.168.5.138:6379/3'

#celery内容等消息的格式设置
CELERY_ACCEPT_CONTENT = ['application/json',]
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

#celery时区设置，使用settings中TIME_ZONE同样的时区
CELERY_TIMEZONE = 'Asia/Shanghai'


CELERYBEAT_SCHEDULE = {
    'AliveHost': {
        'task': 'tasks.host_alive',
        'schedule': timedelta(seconds=180),
        'args': ()
    },
}







